name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  bookshop-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # Uses PR HEAD commit instead of merge

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-
      - name: Build & Install Bookshop-Service
        run: |
          cd bookshop-service
          mvn clean install 
          echo "Bookshop-Service JAR installed in ~/.m2/repository."

      # make sure compiled booshp-service jar can pass to the step-3's bookshop-admin correctly
      # here we upload the jar file
      - name: Upload Bookshop-Service Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: ~/.m2/repository

  bookshop:
    runs-on: ubuntu-latest
    needs: bookshop-service # Waits for bookshop-service to compile & install

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: bookstore
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # Uses PR HEAD commit instead of merge

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Verify MySQL Connection
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -uadmin -padmin -e "SHOW DATABASES;"

      - name: Download Maven Repository Cache
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: ~/.m2/repository

      - name: Build & Install BookShop
        run: |
          cd bookshop
          mvn clean install -DskipTests
          echo "BookShop build completed. JAR should now be in ~/.m2/repository."

      - name: Run Tests with JaCoCo
        run: |
          cd bookshop && mvn test jacoco:report
          ls target/site/jacoco/jacoco.xml

      - name: Upload Bookshop-Service Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: ~/.m2/repository

      - name: Upload BookShop Test Coverage to DeepSource
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
        run: |
          curl https://deepsource.com/cli | sh
          pwd && ls bookshop/target/site/jacoco/jacoco.xml
          ./bin/deepsource report --analyzer test-coverage --key java --value-file bookshop/target/site/jacoco/jacoco.xml

  bookshop-admin:
    runs-on: ubuntu-latest
    needs:
      - bookshop          # depends on bookshop
      - bookshop-service  # depends on bookshop-service
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: bookstore
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # Uses PR HEAD commit instead of merge

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: Restore Maven Dependencies (Ensure BookShop JAR is Available)
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Verify MySQL Connection
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -uadmin -padmin -e "SHOW DATABASES;"

      - name: Download Maven Repository Cache
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: ~/.m2/repository

      - name: Build Bookshop-Admin
        run: |
          cd bookshop-admin
          mvn clean package -DskipTests
          echo "Bookshop-Admin built successfully using BookShop JAR from ~/.m2/repository."

      - name: Run Tests with JaCoCo
        run: |
          cd bookshop-admin && mvn test jacoco:report
          ls target/site/jacoco/jacoco.xml

      - name: Upload Bookshop-Admin Test Coverage to DeepSource
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
        run: |
          curl https://deepsource.com/cli | sh
          pwd && ls bookshop-admin/target/site/jacoco/jacoco.xml
          ./bin/deepsource report --analyzer test-coverage --key java --value-file bookshop-admin/target/site/jacoco/jacoco.xml
